// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`inline should inline svg optmized 1`] = `
"body {
  background: url(\\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100'%3e    %3cpath d='M10,10 H90 L50,70'/%3e%3ctext y='90'%3e' %26apos; %23 %25 %26amp; %c2%bf %f0%9f%94%a3%3c/text%3e%3c/svg%3e\\");
  background: url(\\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100'%3e    %3cpath d='M10,10 H90 L50,70'/%3e%3ctext y='90'%3e' %26apos; %23 %25 %26amp; %c2%bf %f0%9f%94%a3%3c/text%3e%3c/svg%3e\\");
  background: url(\\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100'%3e    %3cpath d='M10,10 H90 L50,70'/%3e%3ctext y='90'%3e' %26apos; %23 %25 %26amp; %c2%bf %f0%9f%94%a3%3c/text%3e%3c/svg%3e\\");
}"
`;

exports[`inline should inline svg wrapped by quotes 1`] = `
"body {
  background: url(\\"data:image/svg+xml,%3Csvg%3E%3Cg transform%3D%22translate(0)%22%2F%3E%3C%2Fsvg%3E\\");
  background: url(\\"data:image/svg+xml,%3Csvg%3E%3Cg transform%3D%22translate(0)%22%2F%3E%3C%2Fsvg%3E\\");
  background: url(\\"data:image/svg+xml,%3Csvg%3E%3Cg transform%3D%22translate(0)%22%2F%3E%3C%2Fsvg%3E\\");
}"
`;

exports[`inline should inline url and include hash, if it has a hash in it and option is enabled 1`] = `
"body {
  clip-path: url(\\"data:image/svg+xml,%3Csvg xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%2F%3E#el\\")
}"
`;

exports[`inline should inline url and not include hash, if it has a hash in it 1`] = `
"body {
  clip-path: url(\\"data:image/svg+xml,%3Csvg xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%2F%3E\\")
}"
`;

exports[`inline should respect the fallback function 1`] = `
"body {
  background: url(one);
}"
`;

exports[`inline should respect the fallback rebase 1`] = `
"body {
  background: url(../pixel.gif);
}"
`;

exports[`inline shouldn't inline url if not info available 1`] = `
"body {
  background: url(\\"./one\\");
}"
`;
